第1条：考虑用静态工厂方法代替构造器
static factory method
	静态工厂方法与构造器相比 不必每次调用时创建新对象
	可以返回类型的任何子类型的对象
	·服务提供者框架（Service Provider Framework）	such as JDBC
		服务接口
		提供者注册API
		服务访问API
		服务提供者接口
valueOf
getInstance
newInstance
getType
newType

第2条：遇到多个构造器参数时要考虑用构建器（builder）
	如果类的构造器或者静态工厂中具有多个参数，设计这种类时，Builder模式就是个不错的选择
	Class.newInstance破坏了编译时的异常检查

第3条：用私有构造器或者枚举类型强化Singleton属性
第4条：通过私有构造器强化不可实例化的能力
	企图通过将类做成抽象类来强制该类不可被实例化，这是行不通的
	
第5条：避免创建不必要的对象
	new String("string") ×
	优先使用基本类型而不是装箱基本类型
第6条：消除过期的对象引用
	只要类是自己管理内存，程序猿就应该警惕内存泄露问题
	*栈中弹出的对象不会被当做垃圾回收   栈中有过期引用
	缓存
	监听器 回调
第7条：避免使用终结方法
	不可预测  性能损失